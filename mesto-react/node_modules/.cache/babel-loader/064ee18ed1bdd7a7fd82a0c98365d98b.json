{"ast":null,"code":"class ApiAuth {\n  constructor(options) {\n    this._host = options.host;\n    this._headers = options.headers;\n  }\n\n  _responseAnalysis(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Что-то пошло не так ${res.status}`);\n  }\n\n  _request(data, email, password) {\n    return fetch(`${this._host}${data.url}`, {\n      method: data.methodName,\n      headers: this._headers,\n      body: JSON.stringify({\n        'password': password,\n        'email': email\n      })\n    }).then(response => {\n      try {\n        debugger;\n\n        if (response.status === 201) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(` dddd ${err}`));\n  }\n\n  register(data, email, password) {\n    debugger;\n    return this._request({\n      url: data.endpoint,\n      methodName: data.methodName\n    }, email, password);\n  }\n\n}\n\nconst apiAuth = new ApiAuth({\n  host: 'https://auth.nomoreparties.co/',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default apiAuth;","map":{"version":3,"names":["ApiAuth","constructor","options","_host","host","_headers","headers","_responseAnalysis","res","ok","json","Promise","reject","status","_request","data","email","password","fetch","url","method","methodName","body","JSON","stringify","then","response","e","catch","err","console","log","register","endpoint","apiAuth"],"sources":["C:/Users/User/dev/react-mesto-auth/mesto-react/src/utils/ApiAuth.js"],"sourcesContent":["\r\n\r\nclass ApiAuth {\r\n    constructor(options) {\r\n        this._host = options.host;\r\n        this._headers = options.headers;\r\n    }\r\n    _responseAnalysis(res) {\r\n        if (res.ok ) { return res.json(); }\r\n        return Promise.reject(`Что-то пошло не так ${res.status}`)\r\n    };\r\n    _request(data, email, password,) {\r\n        return fetch(`${this._host}${data.url}`, {\r\n            method: data.methodName,\r\n            headers: this._headers,\r\n            body: JSON.stringify({ 'password': password, 'email': email })\r\n        }) .then((response) => {\r\n            try {\r\n                debugger\r\n              if (response.status === 201){\r\n                return response.json();\r\n              }\r\n            } catch(e){\r\n              return (e)\r\n            }\r\n          })\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => console.log(` dddd ${err}`));\r\n    }\r\n\r\n    register(data,  email, password) {\r\n        debugger\r\n        return this._request({\r\n            url: data.endpoint,\r\n            methodName: data.methodName,\r\n        }, email, password)\r\n    };\r\n\r\n}\r\n\r\n\r\nconst apiAuth = new ApiAuth({\r\n    host: 'https://auth.nomoreparties.co/',\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n})\r\n\r\nexport default apiAuth;\r\n\r\n"],"mappings":"AAEA,MAAMA,OAAN,CAAc;EACVC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKC,KAAL,GAAaD,OAAO,CAACE,IAArB;IACA,KAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;EACH;;EACDC,iBAAiB,CAACC,GAAD,EAAM;IACnB,IAAIA,GAAG,CAACC,EAAR,EAAa;MAAE,OAAOD,GAAG,CAACE,IAAJ,EAAP;IAAoB;;IACnC,OAAOC,OAAO,CAACC,MAAR,CAAgB,uBAAsBJ,GAAG,CAACK,MAAO,EAAjD,CAAP;EACH;;EACDC,QAAQ,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAyB;IAC7B,OAAOC,KAAK,CAAE,GAAE,KAAKf,KAAM,GAAEY,IAAI,CAACI,GAAI,EAA1B,EAA6B;MACrCC,MAAM,EAAEL,IAAI,CAACM,UADwB;MAErCf,OAAO,EAAE,KAAKD,QAFuB;MAGrCiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAE,YAAYP,QAAd;QAAwB,SAASD;MAAjC,CAAf;IAH+B,CAA7B,CAAL,CAIHS,IAJG,CAIGC,QAAD,IAAc;MACnB,IAAI;QACA;;QACF,IAAIA,QAAQ,CAACb,MAAT,KAAoB,GAAxB,EAA4B;UAC1B,OAAOa,QAAQ,CAAChB,IAAT,EAAP;QACD;MACF,CALD,CAKE,OAAMiB,CAAN,EAAQ;QACR,OAAQA,CAAR;MACD;IACF,CAbI,EAcJF,IAdI,CAcEjB,GAAD,IAAS;MACb,OAAOA,GAAP;IACD,CAhBI,EAiBJoB,KAjBI,CAiBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAa,SAAQF,GAAI,EAAzB,CAjBX,CAAP;EAkBH;;EAEDG,QAAQ,CAACjB,IAAD,EAAQC,KAAR,EAAeC,QAAf,EAAyB;IAC7B;IACA,OAAO,KAAKH,QAAL,CAAc;MACjBK,GAAG,EAAEJ,IAAI,CAACkB,QADO;MAEjBZ,UAAU,EAAEN,IAAI,CAACM;IAFA,CAAd,EAGJL,KAHI,EAGGC,QAHH,CAAP;EAIH;;AApCS;;AAyCd,MAAMiB,OAAO,GAAG,IAAIlC,OAAJ,CAAY;EACxBI,IAAI,EAAE,gCADkB;EAExBE,OAAO,EAAE;IAAE,gBAAgB;EAAlB;AAFe,CAAZ,CAAhB;AAKA,eAAe4B,OAAf"},"metadata":{},"sourceType":"module"}