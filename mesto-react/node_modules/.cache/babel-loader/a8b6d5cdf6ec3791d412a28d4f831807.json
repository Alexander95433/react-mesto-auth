{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\dev\\\\react-mesto-auth\\\\mesto-react\\\\src\\\\components\\\\EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../components/context/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState();\n  const [description, setDescription] = React.useState(); // обновит поля ввода с использованием данный из urrentUser при изменение props.isOpen\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]); //синхронизирует поля формы с содержимым информации о профиле\n\n  function handleChange(e) {\n    e.target.name === 'name' ? setName(e.target.value) : setDescription(e.target.value);\n  } // обработчик submit для формы\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'popup-edit-profile',\n    title: 'Редактировать профиль',\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      value: name || '',\n      className: \"popup__form-input popup__form-input_name-edit-profile\",\n      id: \"edit-profile-name\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__span-input-error edit-profile-name-error\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      value: description || '',\n      className: \"popup__form-input popup__form-input_description-edit-profile\",\n      id: \"edit-profile-description\",\n      type: \"text\",\n      name: \"about\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__span-input-error edit-profile-description-error\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"uz5dVtZDzSDBDJOPtxriNPvRtqY=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","useEffect","about","isOpen","handleChange","e","target","value","handleSubmit","preventDefault","onUpdateUser","onClose"],"sources":["C:/Users/User/dev/react-mesto-auth/mesto-react/src/components/EditProfilePopup.js"],"sourcesContent":["import React from 'react';\r\nimport PopupWithForm from './PopupWithForm'\r\nimport { CurrentUserContext } from '../components/context/CurrentUserContext'\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext)\r\n\r\n    const [name, setName] = React.useState()\r\n    const [description, setDescription] = React.useState()\r\n\r\n    // обновит поля ввода с использованием данный из urrentUser при изменение props.isOpen\r\n    React.useEffect(() => {\r\n        setName(currentUser.name)\r\n        setDescription(currentUser.about)\r\n    }, [currentUser, props.isOpen])\r\n\r\n    //синхронизирует поля формы с содержимым информации о профиле\r\n    function handleChange(e) {\r\n        e.target.name === 'name' ? setName(e.target.value) : setDescription(e.target.value)\r\n    }\r\n\r\n    // обработчик submit для формы\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <PopupWithForm name={'popup-edit-profile'} title={'Редактировать профиль'} isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}  >\r\n            <input onChange={handleChange} value={name || ''} className=\"popup__form-input popup__form-input_name-edit-profile\" id=\"edit-profile-name\"\r\n                type=\"text\" name=\"name\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required />\r\n            <span className=\"popup__span-input-error edit-profile-name-error\" hidden></span>\r\n            <input onChange={handleChange} value={description || ''} className=\"popup__form-input popup__form-input_description-edit-profile\"\r\n                id=\"edit-profile-description\" type=\"text\" name=\"about\" placeholder=\"О себе\"\r\n                minLength=\"2\" maxLength=\"200\" required />\r\n            <span className=\"popup__span-input-error edit-profile-description-error\" hidden></span>\r\n        </PopupWithForm>)\r\n}\r\nexport default EditProfilePopup"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,0CAAnC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAC7B,MAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBJ,kBAAjB,CAApB;EAEA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,EAAxB;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,EAAtC,CAJ6B,CAM7B;;EACAT,KAAK,CAACY,SAAN,CAAgB,MAAM;IAClBJ,OAAO,CAACH,WAAW,CAACE,IAAb,CAAP;IACAI,cAAc,CAACN,WAAW,CAACQ,KAAb,CAAd;EACH,CAHD,EAGG,CAACR,WAAD,EAAcD,KAAK,CAACU,MAApB,CAHH,EAP6B,CAY7B;;EACA,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;IACrBA,CAAC,CAACC,MAAF,CAASV,IAAT,KAAkB,MAAlB,GAA2BC,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlC,GAAqDP,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnE;EACH,CAf4B,CAiB7B;;;EACA,SAASC,YAAT,CAAsBH,CAAtB,EAAyB;IACrBA,CAAC,CAACI,cAAF;IACAhB,KAAK,CAACiB,YAAN,CAAmB;MACfd,IAAI,EAAEA,IADS;MAEfM,KAAK,EAAEH;IAFQ,CAAnB;EAIH;;EAID,oBACI,QAAC,aAAD;IAAe,IAAI,EAAE,oBAArB;IAA2C,KAAK,EAAE,uBAAlD;IAA2E,MAAM,EAAEN,KAAK,CAACU,MAAzF;IAAiG,OAAO,EAAEV,KAAK,CAACkB,OAAhH;IAAyH,QAAQ,EAAEH,YAAnI;IAAA,wBACI;MAAO,QAAQ,EAAEJ,YAAjB;MAA+B,KAAK,EAAER,IAAI,IAAI,EAA9C;MAAkD,SAAS,EAAC,uDAA5D;MAAoH,EAAE,EAAC,mBAAvH;MACI,IAAI,EAAC,MADT;MACgB,IAAI,EAAC,MADrB;MAC4B,WAAW,EAAC,oBADxC;MAC8C,SAAS,EAAC,GADxD;MAC4D,SAAS,EAAC,IADtE;MAC2E,QAAQ;IADnF;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAM,SAAS,EAAC,iDAAhB;MAAkE,MAAM;IAAxE;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAO,QAAQ,EAAEQ,YAAjB;MAA+B,KAAK,EAAEL,WAAW,IAAI,EAArD;MAAyD,SAAS,EAAC,8DAAnE;MACI,EAAE,EAAC,0BADP;MACkC,IAAI,EAAC,MADvC;MAC8C,IAAI,EAAC,OADnD;MAC2D,WAAW,EAAC,iCADvE;MAEI,SAAS,EAAC,GAFd;MAEkB,SAAS,EAAC,KAF5B;MAEkC,QAAQ;IAF1C;MAAA;MAAA;MAAA;IAAA,QAJJ,eAOI;MAAM,SAAS,EAAC,wDAAhB;MAAyE,MAAM;IAA/E;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAtCQP,gB;;KAAAA,gB;AAuCT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}