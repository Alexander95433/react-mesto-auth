{"ast":null,"code":"//import { data } from \"autoprefixer\";\nimport { register } from \"../../../../../react-mesto-auth/src/utils/ApiAuth\";\n\nclass Api {\n  constructor(options) {\n    this._host = options.host;\n    this._headers = options.headers;\n  }\n\n  //Анализ ответа сервера\n  _responseAnalysis(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Что-то пошло не так ${res.status}`);\n  }\n\n  //получение информации о пользователе\n  getUserInfo() {\n    return fetch(`${this._host}/users/me`, {\n      headers: this._headers\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  //отправка данный из popup edit profile на сервер \n  sendUserInfo(data) {\n    return fetch(`${this._host}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  //Загрузка карточек с сервера \n  getCards() {\n    return fetch(`${this._host}/cards`, {\n      headers: this._headers\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  //Добавление новой карточки на сервер\n  sendNewCard(data) {\n    return fetch(`${this._host}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  //Удаление своей карточки с сервера\n  deleteCard(cardId) {\n    return fetch(`${this._host}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  //////////////////////////////////////////////////////////    \n  //Поставить like убрать  like\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._host}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'DELETE' : 'PUT'}`,\n      headers: this._headers\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  //////////////////////////////////////////////////////////\n  //Обновление аватара пользователя\n  avatarUpdate(avatarId) {\n    return fetch(`${this._host}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarId.link\n      })\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  _request(url, methodName, registerUserData) {\n    return fetch(`${this._hosts}${url}`, {\n      method: methodName,\n      headers: this._headers,\n      body: JSON.stringify({\n        registerUserData\n      })\n    }).then(res => {\n      this._responseAnalysis(res);\n    });\n  }\n\n  register(endpoint, methodNameemail, password) {\n    return this._request({\n      url: endpoint,\n      methodName\n    });\n  } ///////////////////////////////////////////////////////////\n\n\n}\n\n;\nconst api = new Api({\n  host: 'https://mesto.nomoreparties.co/v1/cohort-47',\n  headers: {\n    authorization: '39dffeee-b595-4873-9b86-da022740c5b2',\n    'Content-Type': 'application/json'\n  }\n});\nconst apiAuth = Api({\n  hosts: 'https://auth.nomoreparties.co',\n  headers: 'Content-Type\": \"application/json'\n});\nexport default api;","map":{"version":3,"names":["register","Api","constructor","options","_host","host","_headers","headers","_responseAnalysis","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","sendUserInfo","data","method","body","JSON","stringify","name","about","getCards","sendNewCard","link","deleteCard","cardId","changeLikeCardStatus","isLiked","avatarUpdate","avatarId","avatar","_request","url","methodName","registerUserData","_hosts","endpoint","methodNameemail","password","api","authorization","apiAuth","hosts"],"sources":["C:/Users/User/dev/react-mesto-auth/mesto-react/src/utils/Api.js"],"sourcesContent":["//import { data } from \"autoprefixer\";\r\n\r\nimport { register } from \"../../../../../react-mesto-auth/src/utils/ApiAuth\";\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._host = options.host;\r\n        this._headers = options.headers;\r\n    };\r\n\r\n    //Анализ ответа сервера\r\n    _responseAnalysis(res) {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(`Что-то пошло не так ${res.status}`)\r\n    };\r\n\r\n    //получение информации о пользователе\r\n    getUserInfo() {\r\n        return fetch(`${this._host}/users/me`,\r\n            {\r\n                headers: this._headers\r\n            })\r\n            .then(res => this._responseAnalysis(res))\r\n    };\r\n\r\n    //отправка данный из popup edit profile на сервер \r\n    sendUserInfo(data) {\r\n        return fetch(`${this._host}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about,\r\n            })\r\n        })\r\n            .then(res => this._responseAnalysis(res))\r\n    };\r\n\r\n    //Загрузка карточек с сервера \r\n    getCards() {\r\n        return fetch(`${this._host}/cards`,\r\n            {\r\n                headers: this._headers\r\n            })\r\n            .then(res => this._responseAnalysis(res))\r\n    };\r\n\r\n    //Добавление новой карточки на сервер\r\n    sendNewCard(data) {\r\n        return fetch(`${this._host}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link,\r\n            })\r\n        })\r\n            .then(res => this._responseAnalysis(res))\r\n    };\r\n\r\n    //Удаление своей карточки с сервера\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._host}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(res => this._responseAnalysis(res))\r\n    };\r\n\r\n    //////////////////////////////////////////////////////////    \r\n\r\n    //Поставить like убрать  like\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n\r\n        return fetch(`${this._host}/cards/${cardId}/likes`, {\r\n            method: `${isLiked ? 'DELETE' : 'PUT'}`,\r\n            headers: this._headers\r\n        })\r\n            .then(res => this._responseAnalysis(res))\r\n    };\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n    //Обновление аватара пользователя\r\n    avatarUpdate(avatarId) {\r\n        return fetch(`${this._host}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: avatarId.link\r\n            })\r\n        })\r\n            .then(res => this._responseAnalysis(res))\r\n    };\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////\r\n    _request(url, methodName, registerUserData) {\r\n        return fetch(`${this._hosts}${url}`, {\r\n            method: methodName,\r\n            headers: this._headers,\r\n            body: JSON.stringify({ registerUserData })\r\n        })\r\n            .then((res) => { this._responseAnalysis(res) })\r\n    }\r\n\r\n    register(endpoint, methodNameemail, password) {\r\n        return this._request({\r\n            url: endpoint,\r\n            methodName\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////\r\n};\r\n\r\n \r\n\r\n\r\nconst api = new Api({\r\n    host: 'https://mesto.nomoreparties.co/v1/cohort-47',\r\n    headers: {\r\n        authorization: '39dffeee-b595-4873-9b86-da022740c5b2',\r\n        'Content-Type': 'application/json'\r\n    },\r\n});\r\n\r\n\r\nconst apiAuth = Api({\r\n    hosts: 'https://auth.nomoreparties.co',\r\n    headers: 'Content-Type\": \"application/json'\r\n})\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}