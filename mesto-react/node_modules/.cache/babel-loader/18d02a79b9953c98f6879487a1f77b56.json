{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\dev\\\\react-mesto-auth\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../components/context/CurrentUserContext';\nimport { useHistory } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRouter from './ProtectedRouter';\nimport apiAuth from '../utils/ApiAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setisEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setselectedCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory(); //подумай как синхронизировать поля формы перед открытием   setName(currentUser.name);  setDescription(currentUser.about)\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    debugger;\n    handleTokenCheck();\n  }, [loggedIn]);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()]).then(_ref => {\n      let [dataUser, dataCards] = _ref;\n      setCurrentUser(dataUser);\n      setCards(dataCards);\n    }).catch(err => console.log(`Ошибка: ${err}`)).finally(() => setLoading(true));\n  }, []); // запрос к api за данными о пользователя\n\n  function handleUpdateUser(data) {\n    api.sendUserInfo(data).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(`Ошибка: получения данный о пользователе ${err}`));\n  } //запрос к api для обновления аватара \n\n\n  function handleUpdateAvatar(avatarId) {\n    api.avatarUpdate(avatarId).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(`Ошибка: при загрузку аватара ${err}`));\n  } // запрос к api для добавления новой карточки\n\n\n  function handleAddPlaceSubmit(dataCard) {\n    api.sendNewCard(dataCard).then(data => {\n      setCards([data, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(`Ошибка: при загрузке новой карточки ${err}`));\n  } //like\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(data => {\n      setCards(state => state.map(item => item._id === card._id ? data : item));\n    }).catch(err => console.log(err));\n  } // обработчик вызова удаления карточки onCardClick\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(stste => stste.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  } /////////////////////////////////////////////////////////////////////////////\n\n\n  function handleRegister(data) {\n    apiAuth.register(data).then(res => {\n      if (res) {\n        setLoggedIn(true);\n        history.push('/sign-in');\n        console.log(res);\n      }\n    }).catch(err => {\n      console.log(`Ошибка регистрации: ${err}`);\n    });\n  }\n\n  function authorization(data) {\n    apiAuth.authorization(data).then(res => {\n      debugger;\n\n      if (res.token) {\n        localStorage.setItem('jwt', res.token);\n        setLoggedIn(true);\n        history.push('/');\n        console.log(res);\n      } else {\n        return;\n      }\n    }).catch(err => {\n      console.log(`Ошибка входа в систему: ${err}`);\n    });\n  }\n\n  function handleTokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      apiAuth.checkToken({\n        endpoint: 'users/me',\n        methodName: 'GET',\n        token: jwt\n      }).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          console.log(loggedIn);\n          history.push('/');\n          console.log(res);\n        }\n      }).catch(err => {\n        console.log(`Ошибка проверки токена: ${err}`);\n      });\n    }\n  }\n\n  function handleClickExit() {\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n    setLoggedIn(false);\n    console.log('выход');\n  } /////////////////////////////////////////////////////////////////////////////\n  //Закрывает все попапы \n\n\n  function closeAllPopups() {\n    setisEditProfilePopupOpen(false);\n    setisAddPlacePopupOpen(false);\n    setisEditAvatarPopupOpen(false);\n    setselectedCard({\n      name: '',\n      link: ''\n    });\n  }\n\n  ; //принимает обьект с карточкой из компонента Card\n\n  function handleCardClick(card) {\n    setselectedCard(card);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onClickExit: handleClickExit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onAuthorization: authorization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRouter, {\n          exact: true,\n          path: \"/\",\n          logiedId: loggedIn,\n          component: Main,\n          onEditProfile: () => {\n            setisEditProfilePopupOpen(true);\n          },\n          onAddPlace: () => {\n            setisAddPlacePopupOpen(true);\n          },\n          onEditAvatar: () => {\n            setisEditAvatarPopupOpen(true);\n          },\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          onLoading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"7DxwP97QT6OnBiqQZk5jYbMtyrc=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Switch","Header","Main","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","useHistory","Login","Register","InfoTooltip","ProtectedRouter","apiAuth","App","isEditProfilePopupOpen","setisEditProfilePopupOpen","useState","isAddPlacePopupOpen","setisAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","selectedCard","setselectedCard","name","link","loggedIn","setLoggedIn","history","currentUser","setCurrentUser","cards","setCards","loading","setLoading","useEffect","handleTokenCheck","Promise","all","getUserInfo","getCards","then","dataUser","dataCards","catch","err","console","log","finally","handleUpdateUser","data","sendUserInfo","closeAllPopups","handleUpdateAvatar","avatarId","avatarUpdate","handleAddPlaceSubmit","dataCard","sendNewCard","handleCardLike","card","isLiked","likes","some","item","_id","changeLikeCardStatus","state","map","handleCardDelete","deleteCard","stste","filter","handleRegister","register","res","push","authorization","token","localStorage","setItem","jwt","getItem","checkToken","endpoint","methodName","handleClickExit","removeItem","handleCardClick"],"sources":["C:/Users/User/dev/react-mesto-auth/mesto-react/src/components/App.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup'\r\nimport EditAvatarPopup from './EditAvatarPopup'\r\nimport AddPlacePopup from './AddPlacePopup'\r\nimport api from '../utils/Api'\r\nimport { CurrentUserContext } from '../components/context/CurrentUserContext'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport ProtectedRouter from './ProtectedRouter';\r\nimport apiAuth from '../utils/ApiAuth'\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setisEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = React.useState(false);\r\n    const [selectedCard, setselectedCard] = React.useState({ name: '', link: '' })\r\n\r\n    const [loggedIn, setLoggedIn] = React.useState(false)\r\n    const history = useHistory();\r\n\r\n    //подумай как синхронизировать поля формы перед открытием   setName(currentUser.name);  setDescription(currentUser.about)\r\n    const [currentUser, setCurrentUser] = React.useState({})\r\n    const [cards, setCards] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n\r\n    React.useEffect(() => {\r\n        debugger\r\n        handleTokenCheck();\r\n      }, [loggedIn]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.getUserInfo(), api.getCards()])\r\n            .then((([dataUser, dataCards]) => {\r\n                setCurrentUser(dataUser)\r\n                setCards(dataCards)\r\n            }))\r\n            .catch(err => console.log(`Ошибка: ${err}`))\r\n            .finally(() => setLoading(true))\r\n    }, [])\r\n\r\n    // запрос к api за данными о пользователя\r\n    function handleUpdateUser(data) {\r\n        api.sendUserInfo(data)\r\n            .then((data) => { setCurrentUser(data); closeAllPopups() })\r\n            .catch(err => console.log(`Ошибка: получения данный о пользователе ${err}`))\r\n    }\r\n\r\n    //запрос к api для обновления аватара \r\n    function handleUpdateAvatar(avatarId) {\r\n        api.avatarUpdate(avatarId)\r\n            .then((data) => { setCurrentUser(data); closeAllPopups() })\r\n            .catch(err => console.log(`Ошибка: при загрузку аватара ${err}`))\r\n    }\r\n\r\n    // запрос к api для добавления новой карточки\r\n    function handleAddPlaceSubmit(dataCard) {\r\n        api.sendNewCard(dataCard)\r\n            .then((data) => { setCards([data, ...cards]); closeAllPopups() })\r\n            .catch(err => console.log(`Ошибка: при загрузке новой карточки ${err}`))\r\n    }\r\n\r\n    //like\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some(item => item._id === currentUser._id);\r\n        api.changeLikeCardStatus(card._id, isLiked)\r\n            .then((data) => {\r\n                setCards((state) => state.map(item => item._id === card._id ? data : item));\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    // обработчик вызова удаления карточки onCardClick\r\n    function handleCardDelete(card) {\r\n        api.deleteCard(card._id)\r\n            .then(() => { setCards((stste) => (stste.filter(item => item._id !== card._id))) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n\r\n    function handleRegister(data) {\r\n        apiAuth.register(data)\r\n            .then((res) => {\r\n                if (res) {\r\n                    setLoggedIn(true)\r\n                    history.push('/sign-in');\r\n                    console.log(res)\r\n                }\r\n            })\r\n            .catch((err) => { console.log(`Ошибка регистрации: ${err}`) })\r\n    }\r\n\r\n    function authorization(data) {\r\n        apiAuth.authorization(data)\r\n            .then((res) => {\r\n                debugger\r\n                if (res.token) {\r\n                    localStorage.setItem('jwt', res.token)\r\n                    setLoggedIn(true)\r\n                    history.push('/');\r\n                    console.log(res)\r\n                } else { return }\r\n            })\r\n            .catch((err) => { console.log(`Ошибка входа в систему: ${err}`) })\r\n    }\r\n\r\n    function handleTokenCheck() {\r\n        const jwt = localStorage.getItem('jwt')\r\n        if (jwt) {\r\n            apiAuth.checkToken({\r\n                endpoint: 'users/me',\r\n                methodName: 'GET',\r\n                token: jwt,\r\n            }).then((res) => {\r\n                if (res) {\r\n                    setLoggedIn(true);\r\n                    console.log(loggedIn)\r\n                    history.push('/');\r\n                    console.log(res)\r\n                }\r\n            })\r\n                .catch((err) => { console.log(`Ошибка проверки токена: ${err}`) })\r\n        }\r\n    }\r\n\r\n    function handleClickExit() {\r\n        localStorage.removeItem('jwt')\r\n        history.push('/sign-in')\r\n        setLoggedIn(false)\r\n        console.log('выход')\r\n    }\r\n\r\n\r\n\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n\r\n    //Закрывает все попапы \r\n    function closeAllPopups() {\r\n        setisEditProfilePopupOpen(false)\r\n        setisAddPlacePopupOpen(false)\r\n        setisEditAvatarPopupOpen(false)\r\n        setselectedCard({ name: '', link: '' })\r\n    };\r\n\r\n    //принимает обьект с карточкой из компонента Card\r\n    function handleCardClick(card) { setselectedCard(card) };\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"page\">\r\n\r\n            <CurrentUserContext.Provider value={currentUser}>\r\n                <Header onClickExit={handleClickExit} />\r\n                <Switch>\r\n                    <Route path='/sign-up'>\r\n                        <Register onRegister={handleRegister}></Register>\r\n                    </Route>\r\n                    <Route path='/sign-in'>\r\n                        <Login onAuthorization={authorization}></Login>\r\n                    </Route>\r\n                    <ProtectedRouter exact path='/' logiedId={loggedIn} component={Main} onEditProfile={() => { setisEditProfilePopupOpen(true) }}\r\n                        onAddPlace={() => { setisAddPlacePopupOpen(true) }} onEditAvatar={() => { setisEditAvatarPopupOpen(true) }}\r\n                        onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} onLoading={loading}\r\n                    />\r\n                </Switch>\r\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n                <InfoTooltip onClose={closeAllPopups} />\r\n            </CurrentUserContext.Provider>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}