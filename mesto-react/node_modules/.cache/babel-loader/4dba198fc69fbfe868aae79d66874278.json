{"ast":null,"code":"class ApiAuth {\n  constructor(options) {\n    this._host = options.host;\n    this._headers = options.headers;\n  }\n\n  _responseAnalysis(res) {\n    debugger;\n\n    if (res.ok || res.status === 201) {\n      return res.json();\n    }\n\n    return Promise.reject(res.status);\n  }\n\n  _request(data) {\n    debugger;\n    const config = {\n      method: data.methodName,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(!!data.token && {\n          Authorization: `Bearer ${data.token}`\n        })\n      },\n      ...(!!data.body && {\n        body: JSON.stringify(data.body)\n      })\n    };\n    return fetch(`${this._host}${data.endpoint}`, config).then(res => this._responseAnalysis(res));\n  }\n\n  register(data) {\n    return this._request(data);\n  }\n\n  authorization(data) {\n    return this._request(data);\n  }\n\n  checkToken(data) {\n    return this._request(data);\n  }\n\n}\n\nconst apiAuth = new ApiAuth({\n  host: 'https://auth.nomoreparties.co/',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default apiAuth;","map":{"version":3,"names":["ApiAuth","constructor","options","_host","host","_headers","headers","_responseAnalysis","res","ok","status","json","Promise","reject","_request","data","config","method","methodName","token","Authorization","body","JSON","stringify","fetch","endpoint","then","register","authorization","checkToken","apiAuth"],"sources":["C:/Users/User/dev/react-mesto-auth/mesto-react/src/utils/ApiAuth.js"],"sourcesContent":["\r\n\r\nclass ApiAuth {\r\n    constructor(options) {\r\n        this._host = options.host;\r\n        this._headers = options.headers;\r\n\r\n    }\r\n\r\n    _responseAnalysis(res) {\r\n        debugger\r\n        if (res.ok || res.status === 201) { return res.json(); }\r\n        return Promise.reject(res.status)\r\n    }\r\n\r\n\r\n\r\n\r\n    _request(data) {\r\n        debugger\r\n        const config = {\r\n            method: data.methodName,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                ...(!!data.token && { Authorization: `Bearer ${data.token}` }),\r\n            },\r\n            ...(!!data.body && { body: JSON.stringify(data.body)}),\r\n        };\r\n        return fetch(`${this._host}${data.endpoint}`,config).\r\n        then(res => this._responseAnalysis(res))\r\n    }\r\n\r\n    register(data) {\r\n        return this._request(data)\r\n    };\r\n\r\n    authorization(data) {\r\n        return this._request(data)\r\n    }\r\n\r\n    checkToken(data) {\r\n        return this._request(data)\r\n    }\r\n\r\n}\r\n\r\n\r\nconst apiAuth = new ApiAuth({\r\n    host: 'https://auth.nomoreparties.co/',\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n})\r\n\r\nexport default apiAuth;\r\n\r\n"],"mappings":"AAEA,MAAMA,OAAN,CAAc;EACVC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKC,KAAL,GAAaD,OAAO,CAACE,IAArB;IACA,KAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;EAEH;;EAEDC,iBAAiB,CAACC,GAAD,EAAM;IACnB;;IACA,IAAIA,GAAG,CAACC,EAAJ,IAAUD,GAAG,CAACE,MAAJ,KAAe,GAA7B,EAAkC;MAAE,OAAOF,GAAG,CAACG,IAAJ,EAAP;IAAoB;;IACxD,OAAOC,OAAO,CAACC,MAAR,CAAeL,GAAG,CAACE,MAAnB,CAAP;EACH;;EAKDI,QAAQ,CAACC,IAAD,EAAO;IACX;IACA,MAAMC,MAAM,GAAG;MACXC,MAAM,EAAEF,IAAI,CAACG,UADF;MAEXZ,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,IAAI,CAAC,CAACS,IAAI,CAACI,KAAP,IAAgB;UAAEC,aAAa,EAAG,UAASL,IAAI,CAACI,KAAM;QAAtC,CAApB;MAFK,CAFE;MAMX,IAAI,CAAC,CAACJ,IAAI,CAACM,IAAP,IAAe;QAAEA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACM,IAApB;MAAR,CAAnB;IANW,CAAf;IAQA,OAAOG,KAAK,CAAE,GAAE,KAAKrB,KAAM,GAAEY,IAAI,CAACU,QAAS,EAA/B,EAAiCT,MAAjC,CAAL,CACPU,IADO,CACFlB,GAAG,IAAI,KAAKD,iBAAL,CAAuBC,GAAvB,CADL,CAAP;EAEH;;EAEDmB,QAAQ,CAACZ,IAAD,EAAO;IACX,OAAO,KAAKD,QAAL,CAAcC,IAAd,CAAP;EACH;;EAEDa,aAAa,CAACb,IAAD,EAAO;IAChB,OAAO,KAAKD,QAAL,CAAcC,IAAd,CAAP;EACH;;EAEDc,UAAU,CAACd,IAAD,EAAO;IACb,OAAO,KAAKD,QAAL,CAAcC,IAAd,CAAP;EACH;;AAxCS;;AA6Cd,MAAMe,OAAO,GAAG,IAAI9B,OAAJ,CAAY;EACxBI,IAAI,EAAE,gCADkB;EAExBE,OAAO,EAAE;IAAE,gBAAgB;EAAlB;AAFe,CAAZ,CAAhB;AAKA,eAAewB,OAAf"},"metadata":{},"sourceType":"module"}