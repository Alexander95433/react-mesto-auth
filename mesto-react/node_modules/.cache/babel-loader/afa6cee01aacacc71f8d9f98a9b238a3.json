{"ast":null,"code":"class ApiAuth {\n  constructor(options) {\n    this._host = options.host;\n    this._headers = options.headers;\n    this._config = {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n        ...(!!token && {\n          Authorization: `Bearer ${token}`\n        })\n      },\n      ...(!!body && {\n        body: JSON.stringify(body)\n      })\n    };\n  }\n\n  _responseAnalysis(res) {\n    debugger;\n\n    if (res.ok || res.status === 201) {\n      return res.json();\n    }\n\n    return Promise.reject(res.status);\n  }\n\n  _request(data) {\n    return fetch(`${this._host}${data.endpoint}`, {\n      method: data.methodName,\n      headers: this._headers,\n      body: JSON.stringify({\n        'password': data.password,\n        'email': data.email\n      })\n    }).then(res => this._responseAnalysis(res));\n  }\n\n  register(data) {\n    return this._request(data);\n  }\n\n  authorization(data) {\n    return this._request(data);\n  }\n\n  checkToken(data) {\n    return this._request(data);\n  }\n\n}\n\nconst apiAuth = new ApiAuth({\n  host: 'https://auth.nomoreparties.co/',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default apiAuth;","map":{"version":3,"names":["ApiAuth","constructor","options","_host","host","_headers","headers","_config","method","token","Authorization","body","JSON","stringify","_responseAnalysis","res","ok","status","json","Promise","reject","_request","data","fetch","endpoint","methodName","password","email","then","register","authorization","checkToken","apiAuth"],"sources":["C:/Users/User/dev/react-mesto-auth/mesto-react/src/utils/ApiAuth.js"],"sourcesContent":["\r\n\r\nclass ApiAuth {\r\n    constructor(options) {\r\n        this._host = options.host;\r\n        this._headers = options.headers;\r\n        this._config = {\r\n            method,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              ...(!!token && { Authorization: `Bearer ${token}` }),\r\n            },\r\n            ...(!!body && { body: JSON.stringify(body) }),\r\n          };\r\n    }\r\n\r\n    _responseAnalysis(res) {\r\n        debugger\r\n         if (res.ok || res.status === 201) { return res.json(); }\r\n        return Promise.reject(res.status)\r\n    }\r\n\r\n    _request(data) {\r\n        return fetch(`${this._host}${data.endpoint}`, {\r\n            method: data.methodName,\r\n            headers: this._headers,\r\n            body: JSON.stringify({ 'password': data.password, 'email': data.email })\r\n        }).then(res => this._responseAnalysis(res))\r\n    }\r\n\r\n    register(data) {\r\n        return this._request(data)\r\n    };\r\n\r\n    authorization(data) {\r\n        return this._request(data)\r\n    }\r\n\r\n    checkToken(data) {\r\n        return this._request(data,)\r\n    }\r\n\r\n}\r\n\r\n\r\nconst apiAuth = new ApiAuth({\r\n    host: 'https://auth.nomoreparties.co/',\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n})\r\n\r\nexport default apiAuth;\r\n\r\n"],"mappings":"AAEA,MAAMA,OAAN,CAAc;EACVC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKC,KAAL,GAAaD,OAAO,CAACE,IAArB;IACA,KAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;IACA,KAAKC,OAAL,GAAe;MACXC,MADW;MAEXF,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,IAAI,CAAC,CAACG,KAAF,IAAW;UAAEC,aAAa,EAAG,UAASD,KAAM;QAAjC,CAAf;MAFO,CAFE;MAMX,IAAI,CAAC,CAACE,IAAF,IAAU;QAAEA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;MAAR,CAAd;IANW,CAAf;EAQH;;EAEDG,iBAAiB,CAACC,GAAD,EAAM;IACnB;;IACC,IAAIA,GAAG,CAACC,EAAJ,IAAUD,GAAG,CAACE,MAAJ,KAAe,GAA7B,EAAkC;MAAE,OAAOF,GAAG,CAACG,IAAJ,EAAP;IAAoB;;IACzD,OAAOC,OAAO,CAACC,MAAR,CAAeL,GAAG,CAACE,MAAnB,CAAP;EACH;;EAEDI,QAAQ,CAACC,IAAD,EAAO;IACX,OAAOC,KAAK,CAAE,GAAE,KAAKpB,KAAM,GAAEmB,IAAI,CAACE,QAAS,EAA/B,EAAkC;MAC1ChB,MAAM,EAAEc,IAAI,CAACG,UAD6B;MAE1CnB,OAAO,EAAE,KAAKD,QAF4B;MAG1CM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAE,YAAYS,IAAI,CAACI,QAAnB;QAA6B,SAASJ,IAAI,CAACK;MAA3C,CAAf;IAHoC,CAAlC,CAAL,CAIJC,IAJI,CAICb,GAAG,IAAI,KAAKD,iBAAL,CAAuBC,GAAvB,CAJR,CAAP;EAKH;;EAEDc,QAAQ,CAACP,IAAD,EAAO;IACX,OAAO,KAAKD,QAAL,CAAcC,IAAd,CAAP;EACH;;EAEDQ,aAAa,CAACR,IAAD,EAAO;IAChB,OAAO,KAAKD,QAAL,CAAcC,IAAd,CAAP;EACH;;EAEDS,UAAU,CAACT,IAAD,EAAO;IACb,OAAO,KAAKD,QAAL,CAAcC,IAAd,CAAP;EACH;;AAtCS;;AA2Cd,MAAMU,OAAO,GAAG,IAAIhC,OAAJ,CAAY;EACxBI,IAAI,EAAE,gCADkB;EAExBE,OAAO,EAAE;IAAE,gBAAgB;EAAlB;AAFe,CAAZ,CAAhB;AAKA,eAAe0B,OAAf"},"metadata":{},"sourceType":"module"}